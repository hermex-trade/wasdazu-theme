{{ component( "Ceres::Customer.Components.SalutationSelect" ) }}

<script type="x/template" id="vue-address-field">
    <div class="input-unit" data-validate="text" data-model="fullAddress">
        <input type="text" name="fullAddress" v-model="fullAddress" autocomplete="street-address" :id="'fullAddress' + _uid" @change="emitInputEvent($event.target.value)">
        <label :for="'fullAddress' + _uid">{{ trans("Ceres::Template.addressStreet") }}*</label>
    </div>
</script>

<script>
    Vue.component("address-field", {
        template: "#vue-address-field",
        delimiters: ["${", "}"],
        data: function() {
            return {
                fullAddress: ""
            }
        },
        computed: {
            splittedAddress() {
                return this.fullAddress.split(" ")
            },
            streetName() {
                // naive implementation
                // return this.fullAddress.split(" ")[0]
                var address = this.splittedAddress
                return address.slice(0, address.length - 1).join(' ')
            },
            streetNumber() {
                var address = this.splittedAddress
                return address.slice(address.length - 1).join()
            }
        },
        methods: {
            emitInputEvent() {
                this.$emit("input", {field: "address1", value: this.streetName});
                this.$emit("input", {field: "address2", value: this.streetNumber});
            },
        }
    })
</script>