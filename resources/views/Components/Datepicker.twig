{{ component( "Ceres::Customer.Components.AddressInputGroup.AddressInputGroup" ) }}

<script type="x/template" id="vue-date-picker">
    <div>
        <input v-if="isEdgeDesktop" type="text" name="birthday" placeholder="{{ trans("Ceres::Template.addressBirthdatePlaceholder") }}" :id="'txtBirthdate' + _uid" :value="value.birthday" @input="emitInputEvent('birthday', $event.target.value)">
        <input v-else type="date" min="1901-12-14" :max="new Date().toISOString().split('T')[0]" name="birthday" placeholder="{{ trans("Ceres::Template.addressBirthdatePlaceholder") }}" :id="'txtBirthdate' + _uid" :value="birthday" @input="emitInputEvent('birthday', $event.target.value)">
        <label :for="'txtBirthdate' + _uid">
            ${ transformTranslation("Ceres::Template.addressBirthdate", "de", "billing_address.birthday") }
        </label>
    </div>
</script>

<script>
    Vue.component("date-picker", {
        template: "#vue-date-picker",
        delimiters: ["${", "}"],
        props: [
            'birthday',
            ''
        ],
        computed: {
            isEdgeDesktop() {
                var isEdge = window.navigator.userAgent.indexOf("Edge/") > -1;
                var isTouch = window.ontouchstart !== undefined;
                return isEdge && !isTouch;
            }
        },
        methods: {
            transformTranslation(translationKey, locale, addressKey)
            {
                const translation = this.$translate(translationKey);
                const isRequired = this.isInRequiredFields(locale, addressKey);
                return translation + (isRequired ? "*" : "");
            },
        }
    });
</script>